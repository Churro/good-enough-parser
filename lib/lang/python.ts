import type { LexerConfig } from '/lexer/types';

const operators = [
  '+',
  '-',
  '*',
  '**',
  '/',
  '//',
  '%',
  '@',
  '<<',
  '>>',
  '&',
  '|',
  '^',
  '~',
  ':=',
  '<',
  '>',
  '<=',
  '>=',
  '==',
  '!=',
  ',',
  ':',
  '.',
  ';',
  '@',
  '=',
  '->',
  '+=',
  '-=',
  '*=',
  '/=',
  '//=',
  '%=',
  '@=',
  '&=',
  '|=',
  '^=',
  '>>=',
  '<<=',
  '**=',
];

export const lexerConfig: LexerConfig = {
  comments: [{ type: 'line-comment', startsWith: '#' }],
  symbols: /[_a-zA-Z][_a-zA-Z0-9]*/,
  operators,
  brackets: [
    { startsWith: '{', endsWith: '}' },
    { startsWith: '[', endsWith: ']' },
    { startsWith: '(', endsWith: ')' },
  ],
  strings: [
    { startsWith: "'" },
    { startsWith: '"' },
    { startsWith: "'''" },
    { startsWith: '"""' },
    {
      startsWith: "f'",
      endsWith: "'",
      templates: [{ type: 'expr', startsWith: '{', endsWith: '}' }],
    },
    {
      startsWith: 'f"',
      endsWith: '"',
      templates: [{ type: 'expr', startsWith: '{', endsWith: '}' }],
    },
    { startsWith: "r'", endsWith: "'" },
    { startsWith: 'r"', endsWith: '"' },
  ],
};
